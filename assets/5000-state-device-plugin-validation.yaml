apiVersion: v1
kind: ConfigMap
metadata:
  name: nvidia-dp-validation
  namespace: openshift-sro
data:
  entrypoint.sh: |-
    #!/bin/bash
    NUM_GPUS=$(nvidia-smi -L | wc -l)
    if [ $NUM_GPUS -eq 0 ]; then
      echo "ERROR No GPUs found"
      exit 1
    fi

    /usr/local/cuda-8.0/samples/0_Simple/vectorAdd/vectorAdd

    if [ ! $? -eq 0 ]; then 
      exit 1
    fi

    sleep infinity
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: nvidia-dp-validation-daemonset
  name: nvidia-dp-validation-daemonset
  namespace: openshift-sro
spec:
  selector:
    matchLabels:
      app: nvidia-dp-validation-daemonset
  template:
    metadata:
      labels:
        app: nvidia-dp-validation-daemonset
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: specialresource.openshift.io/device-plugin
                operator: In 
                values:
                - ready 
      tolerations:
      - operator: Exists
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      - image: quay.io/openshift-psap/cuda-vector-add:v0.1
        imagePullPolicy: Always
        name: cuda-vector-add
        command: ["/bin/entrypoint.sh"]
        env:
          - name: NVIDIA_VISIBLE_DEVICES
            value: all
          - name: NVIDIA_DRIVER_CAPABILITIES
            value: "compute,utility"
          - name: NVIDIA_REQUIRE_CUDA  
            value: "cuda>=5.0"
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        resources:
          limits:
            nvidia.com/gpu:  # requesting all GPUs
        volumeMounts:
        - name: entrypoint
          mountPath: /bin/entrypoint.sh
          readOnly: true
          subPath: entrypoint.sh
      volumes:
        - name: entrypoint
          configMap:
            defaultMode: 0700
            name: nvidia-dp-validation
      nodeSelector:
        node-role.kubernetes.io/worker: ""
        feature.node.kubernetes.io/pci-10de.present: "true"
